/*
Copyright Hyperchain Corp. 2016 All Rights Reserved.
*/

syntax = "proto3";

import "transaction.proto";

package pbft;
/*
 * mapping to PBFT paper names
 *
 * PBFT name: local name
 *
 * o: transaction
 * t: timestamp
 * c: client
 * v: view
 * n: sequenceNumber
 * D(m): requestDigest
 * i: replicaId
 */

message consensus_message {
    enum Type {
        TRANSACTION = 0;
        TRANSATION_BATCH = 1;
        PRE_PREPARE = 2;
        PREPARE = 3;
        COMMIT = 4;
        CHECKPOINT = 5;
        VIEW_CHANGE = 6;
        NEW_VIEW = 7;
        FRTCH_REQUEST_BATCH = 8;
        RETURN_REQUEST_BATCH = 9;
        NEGOTIATE_VIEW = 10;
        NEGOTIATE_VIEW_RESPONSE = 11;
    }
    Type type = 1;
    bytes payload = 2;
}

message transaction_batch {
    repeated types.Transaction batch = 1;
    int64 timestamp = 2;
}

message pre_prepare {
    uint64 view = 1;
    uint64 sequence_number = 2;
    string batch_digest = 3;
    transaction_batch transaction_batch = 4;
    uint64 replica_id = 5;
}

message prepare {
    uint64 view = 1;
    uint64 sequence_number = 2;
    string batch_digest = 3;
    uint64 replica_id = 4;
}

message commit {
    uint64 view = 1;
    uint64 sequence_number = 2;
    string batch_digest = 3;
    uint64 replica_id = 4;
}

message block_info {
    uint64 block_number = 1;
    bytes block_hash = 2;
}

message checkpoint {
    uint64 sequence_number = 1;
    uint64 replica_id = 2;
    string id = 3;
}

message view_change {
    /* This message should go away and become a checkpoint once replica_id is removed */
    message C {
        uint64 sequence_number = 1;
        string id = 3;
    }
    message PQ {
        uint64 sequence_number = 1;
        string batch_digest = 2;
        uint64 view = 3;
    }

    uint64 view = 1;
    uint64 h = 2;
    repeated C cset = 3;
    repeated PQ pset = 4;
    repeated PQ qset = 5;
    uint64 replica_id = 6;
    bytes signature = 7;
}

message PQset {
    repeated view_change.PQ set = 1;
}

message new_view {
    uint64 view = 1;
    repeated view_change vset = 2;
    map<uint64, string> xset = 3;
    uint64 replica_id = 4;
}

message fetch_request_batch {
    string batch_digest = 1;
    uint64 replica_id = 2;
}

message negotiate_view {
    uint64 replica_id = 1;
}

message negotiate_view_response {
    uint64 replica_id = 1;
    uint64 view = 2;
}

// consensus metadata
message metadata {
    uint64 seqNo = 1;
}