/*
Copyright Hyperchain Corp. 2016 All Rights Reserved.
*/

syntax = "proto3";

package pbft;

/*
 * mapping to PBFT paper names
 *
 * PBFT name: local name
 *
 * o: transaction
 * t: timestamp
 * c: client
 * v: view
 * n: sequenceNumber
 * D(m): requestDigest
 * i: replicaId
 */

message request {
    int64 timestamp = 1;  // Generated at the client level. Ensures that client's requests are atomically ordered.
    bytes payload = 2;  // opaque payload
    uint64 replica_id = 3;
    bytes signature = 4;
}

message consensus_message {
    oneof payload {
        request request = 1;
        message pbft_message = 2;
    }
}

message message {
    oneof payload {
        request_batch request_batch = 1;
        pre_prepare pre_prepare = 2;
        prepare prepare = 3;
        commit commit = 4;
        checkpoint checkpoint = 5;
        view_change view_change = 6;
        new_view new_view = 7;
        fetch_request_batch fetch_request_batch = 8;
        request_batch return_request_batch = 9;
    }
}

message request_batch {
    repeated request batch = 1;
};

message pre_prepare {
    uint64 view = 1;
    uint64 sequence_number = 2;
    string batch_digest = 3;
    request_batch request_batch = 4;
    uint64 replica_id = 5;
}

message prepare {
    uint64 view = 1;
    uint64 sequence_number = 2;
    string batch_digest = 3;
    uint64 replica_id = 4;
}

message commit {
    uint64 view = 1;
    uint64 sequence_number = 2;
    string batch_digest = 3;
    uint64 replica_id = 4;
}

message block_info {
    uint64 block_number = 1;
    bytes block_hash = 2;
}

message checkpoint {
    uint64 sequence_number = 1;
    uint64 replica_id = 2;
    string id = 3;
}

message view_change {
    /* This message should go away and become a checkpoint once replica_id is removed */
    message C {
        uint64 sequence_number = 1;
        string id = 3;
    }
    message PQ {
        uint64 sequence_number = 1;
        string batch_digest = 2;
        uint64 view = 3;
    }

    uint64 view = 1;
    uint64 h = 2;
    repeated C cset = 3;
    repeated PQ pset = 4;
    repeated PQ qset = 5;
    uint64 replica_id = 6;
    bytes signature = 7;
}

message PQset {
    repeated view_change.PQ set = 1;
}

message new_view {
    uint64 view = 1;
    repeated view_change vset = 2;
    map<uint64, string> xset = 3;
    uint64 replica_id = 4;
}

message fetch_request_batch {
    string batch_digest = 1;
    uint64 replica_id = 2;
}

// batch


// consensus metadata

//message metadata {
//    uint64 seqNo = 1;
//}
