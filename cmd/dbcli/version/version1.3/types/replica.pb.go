// Code generated by protoc-gen-go.
// source: replica.proto
// DO NOT EDIT!

package version1_3

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReplicaInfo struct {
	Chain     *Chain `protobuf:"bytes,1,opt,name=chain" json:"chain,omitempty"`
	Ip        []byte `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port      int32  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Namespace []byte `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *ReplicaInfo) Reset()                    { *m = ReplicaInfo{} }
func (m *ReplicaInfo) String() string            { return proto.CompactTextString(m) }
func (*ReplicaInfo) ProtoMessage()               {}
func (*ReplicaInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ReplicaInfo) GetChain() *Chain {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *ReplicaInfo) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *ReplicaInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ReplicaInfo) GetNamespace() []byte {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func init() {
	proto.RegisterType((*ReplicaInfo)(nil), "version1_3.ReplicaInfo")
}

func init() { proto.RegisterFile("replica.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4a, 0x2d, 0xc8,
	0xc9, 0x4c, 0x4e, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0x4b, 0x2d, 0x2a, 0xce,
	0xcc, 0xcf, 0x33, 0x8c, 0x37, 0x96, 0xe2, 0x4e, 0xce, 0x48, 0xcc, 0xcc, 0x83, 0x48, 0x28, 0x55,
	0x70, 0x71, 0x07, 0x41, 0x54, 0x7a, 0xe6, 0xa5, 0xe5, 0x0b, 0xa9, 0x73, 0xb1, 0x82, 0x65, 0x25,
	0x18, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0x04, 0xf5, 0x10, 0xfa, 0xf4, 0x9c, 0x41, 0x12, 0x41, 0x10,
	0x79, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x02, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0xa6, 0xcc,
	0x02, 0x21, 0x21, 0x2e, 0x96, 0x82, 0xfc, 0xa2, 0x12, 0x09, 0x66, 0x05, 0x46, 0x0d, 0xd6, 0x20,
	0x30, 0x5b, 0x48, 0x86, 0x8b, 0x33, 0x2f, 0x31, 0x37, 0xb5, 0xb8, 0x20, 0x31, 0x39, 0x55, 0x82,
	0x05, 0xac, 0x14, 0x21, 0x90, 0xc4, 0x06, 0x76, 0x80, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xd7,
	0x7a, 0x7a, 0x2f, 0xaa, 0x00, 0x00, 0x00,
}
