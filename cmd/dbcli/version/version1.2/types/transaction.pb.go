// Code generated by protoc-gen-go.
// source: transaction.proto
// DO NOT EDIT!

package version1_2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InvalidTransactionRecord_ErrType int32

const (
	InvalidTransactionRecord_OUTOFBALANCE           InvalidTransactionRecord_ErrType = 0
	InvalidTransactionRecord_SIGFAILED              InvalidTransactionRecord_ErrType = 1
	InvalidTransactionRecord_INVOKE_CONTRACT_FAILED InvalidTransactionRecord_ErrType = 2
	InvalidTransactionRecord_DEPLOY_CONTRACT_FAILED InvalidTransactionRecord_ErrType = 3
	InvalidTransactionRecord_INVALID_PERMISSION     InvalidTransactionRecord_ErrType = 4
)

var InvalidTransactionRecord_ErrType_name = map[int32]string{
	0: "OUTOFBALANCE",
	1: "SIGFAILED",
	2: "INVOKE_CONTRACT_FAILED",
	3: "DEPLOY_CONTRACT_FAILED",
	4: "INVALID_PERMISSION",
}
var InvalidTransactionRecord_ErrType_value = map[string]int32{
	"OUTOFBALANCE":           0,
	"SIGFAILED":              1,
	"INVOKE_CONTRACT_FAILED": 2,
	"DEPLOY_CONTRACT_FAILED": 3,
	"INVALID_PERMISSION":     4,
}

func (x InvalidTransactionRecord_ErrType) String() string {
	return proto.EnumName(InvalidTransactionRecord_ErrType_name, int32(x))
}
func (InvalidTransactionRecord_ErrType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{1, 0}
}

type Transaction struct {
	Version         []byte `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	From            []byte `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To              []byte `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value           []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp       int64  `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Signature       []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	Id              uint64 `protobuf:"varint,7,opt,name=id" json:"id,omitempty"`
	TransactionHash []byte `protobuf:"bytes,8,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	Nonce           int64  `protobuf:"varint,9,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Transaction) GetVersion() []byte {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Transaction) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Transaction) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Transaction) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Transaction) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Transaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Transaction) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Transaction) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *Transaction) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type InvalidTransactionRecord struct {
	Tx      *Transaction                     `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
	ErrType InvalidTransactionRecord_ErrType `protobuf:"varint,2,opt,name=errType,enum=version1_2.InvalidTransactionRecord_ErrType" json:"errType,omitempty"`
	ErrMsg  []byte                           `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (m *InvalidTransactionRecord) Reset()                    { *m = InvalidTransactionRecord{} }
func (m *InvalidTransactionRecord) String() string            { return proto.CompactTextString(m) }
func (*InvalidTransactionRecord) ProtoMessage()               {}
func (*InvalidTransactionRecord) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *InvalidTransactionRecord) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *InvalidTransactionRecord) GetErrType() InvalidTransactionRecord_ErrType {
	if m != nil {
		return m.ErrType
	}
	return InvalidTransactionRecord_OUTOFBALANCE
}

func (m *InvalidTransactionRecord) GetErrMsg() []byte {
	if m != nil {
		return m.ErrMsg
	}
	return nil
}

type InvalidTransactionRecords struct {
	Records []*InvalidTransactionRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *InvalidTransactionRecords) Reset()                    { *m = InvalidTransactionRecords{} }
func (m *InvalidTransactionRecords) String() string            { return proto.CompactTextString(m) }
func (*InvalidTransactionRecords) ProtoMessage()               {}
func (*InvalidTransactionRecords) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *InvalidTransactionRecords) GetRecords() []*InvalidTransactionRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type TransactionMeta struct {
	BlockIndex uint64 `protobuf:"varint,1,opt,name=BlockIndex" json:"BlockIndex,omitempty"`
	Index      int64  `protobuf:"varint,2,opt,name=Index" json:"Index,omitempty"`
}

func (m *TransactionMeta) Reset()                    { *m = TransactionMeta{} }
func (m *TransactionMeta) String() string            { return proto.CompactTextString(m) }
func (*TransactionMeta) ProtoMessage()               {}
func (*TransactionMeta) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *TransactionMeta) GetBlockIndex() uint64 {
	if m != nil {
		return m.BlockIndex
	}
	return 0
}

func (m *TransactionMeta) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func init() {
	proto.RegisterType((*Transaction)(nil), "version1_2.Transaction")
	proto.RegisterType((*InvalidTransactionRecord)(nil), "version1_2.InvalidTransactionRecord")
	proto.RegisterType((*InvalidTransactionRecords)(nil), "version1_2.InvalidTransactionRecords")
	proto.RegisterType((*TransactionMeta)(nil), "version1_2.TransactionMeta")
	proto.RegisterEnum("version1_2.InvalidTransactionRecord_ErrType", InvalidTransactionRecord_ErrType_name, InvalidTransactionRecord_ErrType_value)
}

func init() { proto.RegisterFile("transaction.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x35, 0xd3, 0x6c, 0x63, 0x6f, 0xd7, 0xdd, 0x7a, 0x91, 0x3a, 0x8a, 0x48, 0x09, 0x82, 0x79,
	0x90, 0x82, 0xf5, 0x5d, 0xc8, 0xb6, 0xe9, 0x3a, 0xd8, 0x26, 0xcb, 0x34, 0x2e, 0x88, 0x0f, 0x25,
	0x36, 0xe3, 0x1a, 0x6c, 0x33, 0x65, 0x32, 0x5b, 0x56, 0x7f, 0xc6, 0x2f, 0xf4, 0x1f, 0x24, 0x93,
	0x94, 0x06, 0xa5, 0xb0, 0x6f, 0x73, 0xce, 0xb9, 0x27, 0x93, 0x73, 0xee, 0xc0, 0x63, 0xad, 0x92,
	0xbc, 0x48, 0x56, 0x3a, 0x93, 0xf9, 0x70, 0xab, 0xa4, 0x96, 0x08, 0x3b, 0xa1, 0x8a, 0x4c, 0xe6,
	0x6f, 0x97, 0x23, 0xf7, 0x8f, 0x05, 0xdd, 0xf8, 0x30, 0x81, 0x14, 0x9c, 0x5a, 0xa5, 0xd6, 0xc0,
	0xf2, 0x4e, 0xf9, 0x1e, 0x22, 0x82, 0xfd, 0x4d, 0xc9, 0x0d, 0x25, 0x86, 0x36, 0x67, 0x3c, 0x03,
	0xa2, 0x25, 0x6d, 0x19, 0x86, 0x68, 0x89, 0x4f, 0xe0, 0x64, 0x97, 0xac, 0x6f, 0x05, 0xb5, 0x0d,
	0x55, 0x01, 0x7c, 0x01, 0x1d, 0x9d, 0x6d, 0x44, 0xa1, 0x93, 0xcd, 0x96, 0x9e, 0x0c, 0x2c, 0xaf,
	0xc5, 0x0f, 0x44, 0xa9, 0x16, 0xd9, 0x4d, 0x9e, 0xe8, 0x5b, 0x25, 0x68, 0xdb, 0xf8, 0x0e, 0x44,
	0x79, 0x43, 0x96, 0x52, 0x67, 0x60, 0x79, 0x36, 0x27, 0x59, 0x8a, 0x1e, 0x9c, 0x37, 0x02, 0x7d,
	0x48, 0x8a, 0xef, 0xf4, 0xa1, 0xf1, 0xfc, 0x4b, 0x97, 0xff, 0x92, 0xcb, 0x7c, 0x25, 0x68, 0xc7,
	0xdc, 0x58, 0x01, 0xf7, 0x37, 0x01, 0xca, 0xf2, 0x5d, 0xb2, 0xce, 0xd2, 0x46, 0x6c, 0x2e, 0x56,
	0x52, 0xa5, 0xf8, 0x1a, 0x88, 0xbe, 0x33, 0xb9, 0xbb, 0xa3, 0xa7, 0xc3, 0x43, 0x4b, 0xc3, 0xe6,
	0x28, 0xd1, 0x77, 0x38, 0x05, 0x47, 0x28, 0x15, 0xff, 0xdc, 0x0a, 0x53, 0xc7, 0xd9, 0xe8, 0x4d,
	0x73, 0xfa, 0xd8, 0xf7, 0x87, 0x41, 0xe5, 0xe1, 0x7b, 0x33, 0xf6, 0xa1, 0x2d, 0x94, 0x9a, 0x17,
	0x37, 0x75, 0x87, 0x35, 0x72, 0x7f, 0x81, 0x53, 0xcf, 0x62, 0x0f, 0x4e, 0xa3, 0x4f, 0x71, 0x34,
	0xbd, 0xf0, 0x67, 0x7e, 0x38, 0x0e, 0x7a, 0x0f, 0xf0, 0x11, 0x74, 0x16, 0xec, 0x72, 0xea, 0xb3,
	0x59, 0x30, 0xe9, 0x59, 0xf8, 0x1c, 0xfa, 0x2c, 0xbc, 0x8e, 0x3e, 0x06, 0xcb, 0x71, 0x14, 0xc6,
	0xdc, 0x1f, 0xc7, 0xcb, 0x5a, 0x23, 0xa5, 0x36, 0x09, 0xae, 0x66, 0xd1, 0xe7, 0xff, 0xb4, 0x16,
	0xf6, 0x01, 0x59, 0x78, 0xed, 0xcf, 0xd8, 0x64, 0x79, 0x15, 0xf0, 0x39, 0x5b, 0x2c, 0x58, 0x14,
	0xf6, 0x6c, 0xf7, 0x0b, 0x3c, 0x3b, 0x16, 0xa0, 0xc0, 0xf7, 0xe0, 0xa8, 0xea, 0x48, 0xad, 0x41,
	0xcb, 0xeb, 0x8e, 0x5e, 0xdd, 0x27, 0x38, 0xdf, 0x9b, 0xdc, 0x4b, 0x38, 0x6f, 0xa8, 0x73, 0xa1,
	0x13, 0x7c, 0x09, 0x70, 0xb1, 0x96, 0xab, 0x1f, 0x2c, 0x4f, 0x45, 0x55, 0xbe, 0xcd, 0x1b, 0x4c,
	0xb9, 0xc7, 0x4a, 0x22, 0xd5, 0x1e, 0x0d, 0xf8, 0xda, 0x36, 0x4f, 0xf9, 0xdd, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xc0, 0x27, 0xaf, 0xe1, 0xdf, 0x02, 0x00, 0x00,
}
