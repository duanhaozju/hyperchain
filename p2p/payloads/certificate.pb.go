// Code generated by protoc-gen-go. DO NOT EDIT.
// source: certificate.proto

/*
Package payloads is a generated protocol buffer package.

It is generated from these files:
	certificate.proto
	identify.proto

It has these top-level messages:
	Certificate
	Identify
*/
package payloads

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Certificate struct {
	Version  int64  `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	ECert    []byte `protobuf:"bytes,2,opt,name=ECert,proto3" json:"ECert,omitempty"`
	ECertSig []byte `protobuf:"bytes,3,opt,name=ECertSig,proto3" json:"ECertSig,omitempty"`
	RCert    []byte `protobuf:"bytes,4,opt,name=RCert,proto3" json:"RCert,omitempty"`
	RCertSig []byte `protobuf:"bytes,5,opt,name=RCertSig,proto3" json:"RCertSig,omitempty"`
	// generally commonly is node identify or hash
	WithData []byte `protobuf:"bytes,6,opt,name=WithData,proto3" json:"WithData,omitempty"`
	Rand     []byte `protobuf:"bytes,7,opt,name=Rand,proto3" json:"Rand,omitempty"`
}

func (m *Certificate) Reset()                    { *m = Certificate{} }
func (m *Certificate) String() string            { return proto.CompactTextString(m) }
func (*Certificate) ProtoMessage()               {}
func (*Certificate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Certificate) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Certificate) GetECert() []byte {
	if m != nil {
		return m.ECert
	}
	return nil
}

func (m *Certificate) GetECertSig() []byte {
	if m != nil {
		return m.ECertSig
	}
	return nil
}

func (m *Certificate) GetRCert() []byte {
	if m != nil {
		return m.RCert
	}
	return nil
}

func (m *Certificate) GetRCertSig() []byte {
	if m != nil {
		return m.RCertSig
	}
	return nil
}

func (m *Certificate) GetWithData() []byte {
	if m != nil {
		return m.WithData
	}
	return nil
}

func (m *Certificate) GetRand() []byte {
	if m != nil {
		return m.Rand
	}
	return nil
}

func init() {
	proto.RegisterType((*Certificate)(nil), "payloads.Certificate")
}

func init() { proto.RegisterFile("certificate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x4e, 0x2d, 0x2a,
	0xc9, 0x4c, 0xcb, 0x4c, 0x4e, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x28,
	0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0x29, 0x56, 0xda, 0xcd, 0xc8, 0xc5, 0xed, 0x8c, 0x90, 0x17,
	0x92, 0xe0, 0x62, 0x0f, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x93, 0x60, 0x54, 0x60, 0xd4, 0x60,
	0x0e, 0x82, 0x71, 0x85, 0x44, 0xb8, 0x58, 0x5d, 0x41, 0x2a, 0x25, 0x98, 0x14, 0x18, 0x35, 0x78,
	0x82, 0x20, 0x1c, 0x21, 0x29, 0x2e, 0x0e, 0x30, 0x23, 0x38, 0x33, 0x5d, 0x82, 0x19, 0x2c, 0x01,
	0xe7, 0x83, 0x74, 0x04, 0x81, 0x75, 0xb0, 0x40, 0x74, 0x04, 0xc1, 0x74, 0x04, 0xc1, 0x74, 0xb0,
	0x42, 0x74, 0xc0, 0xf8, 0x20, 0xb9, 0xf0, 0xcc, 0x92, 0x0c, 0x97, 0xc4, 0x92, 0x44, 0x09, 0x36,
	0x88, 0x1c, 0x8c, 0x2f, 0x24, 0xc4, 0xc5, 0x12, 0x94, 0x98, 0x97, 0x22, 0xc1, 0x0e, 0x16, 0x07,
	0xb3, 0x93, 0xd8, 0xc0, 0xde, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x63, 0xfb, 0x7c, 0x19,
	0xe3, 0x00, 0x00, 0x00,
}
