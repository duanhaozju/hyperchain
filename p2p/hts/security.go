package hts

// Security defined the security layer issues,
// including the Diffie-Hellman key exchange algorithm ECDH or SM2DH,
// and Symmetric encryption algorithm AES/3DES/SM4.
type Security interface {
	KeyExchange
	SymmetricSecurity
}

// KeyExchange defines the methods required for the shared secret key exchange process.
type KeyExchange interface {

	// VerifySign verifies whether the signature is generated by this cert.
	// This method will not check if the cert is valid, but verify signature
	// is valid.
	VerifySign(sign []byte, data []byte, cert []byte) (bool, error)

	// GenerateShareKey will generate the shared key.
	// Param priKey is node's own private key.
	// Param rand includes node's random and remote peer's random.
	// Param cert is remote peers's public key certificate.
	GenerateShareKey(priKey []byte, rand []byte, cert []byte) (sharedKey []byte, err error)
}

// SymmetricSecurity defines the methods required for symmetric encryption.
type SymmetricSecurity interface {
	Encrypt(key, originMsg []byte) (encryptedMsg []byte, err error)
	Decrypt(key, encryptedMsg []byte) (originMsg []byte, err error)
}
