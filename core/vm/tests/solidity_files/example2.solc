// a simulation of bank, we can transfer money from account1 to account2
contract SimulateBank{
    address owner;
    bytes32 bankName;
    uint bankNum;
    bool isInvalid;

    mapping(address => uint) public accounts;

    function SimulateBank( bytes32 _bankName,uint _bankNum,bool _isInvalid){
        bankName = _bankName;
        bankNum = _bankNum;
        isInvalid = _isInvalid;
        owner = msg.sender;
    }

    function issue(address addr,uint number) returns (bool){
        if(msg.sender==owner){
            accounts[addr] = accounts[addr] + number;
            return true;
        }
        return false;
    }

    function transfer(address addr1,address addr2,uint amount) returns (bool){
        if(accounts[addr1] >= amount){
            accounts[addr1] = accounts[addr1] - amount;
            accounts[addr2] = accounts[addr2] + amount;
            return true;
        }
        return false;
    }

    function getAccountBalance(address addr) returns(uint){
        return accounts[addr];
    }
}

// payload:`6060604052604051606080610427833981016040528080519060200190919080519060200190919080519060200190919050505b826001600050819055508160026000508190555080600360006101000a81548160ff0219169083021790555033600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b50505061038b8061009c6000396000f360606040526000357c0100000000000000000000000000000000000000000000000000000000900480635e5c06e21461005d578063867904b41461008e57806393423e9c146100ca578063beabacc8146100fb57610058565b610002565b34610002576100786004808035906020019091905050610140565b6040518082815260200191505060405180910390f35b34610002576100b2600480803590602001909190803590602001909190505061015b565b60405180821515815260200191505060405180910390f35b34610002576100e56004808035906020019091905050610230565b6040518082815260200191505060405180910390f35b3461000257610128600480803590602001909190803590602001909190803590602001909190505061026e565b60405180821515815260200191505060405180910390f35b60046000506020528060005260406000206000915090505481565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102215781600460005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505401600460005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506001905061022a565b6000905061022a565b92915050565b6000600460005060008373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549050610269565b919050565b600081600460005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505410151561037b5781600460005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505403600460005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190555081600460005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505401600460005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508190555060019050610384565b60009050610384565b939250505056`
// input1: SimulateBank();
// input1: issue();
// input1: transfer();