// Code generated by protoc-gen-go.
// source: transaction.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	transaction.proto

It has these top-level messages:
	Transaction
	InvalidTransactionRecord
	InvalidTransactionRecords
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InvalidTransactionRecord_ErrType int32

const (
	InvalidTransactionRecord_OUTOFBALANCE InvalidTransactionRecord_ErrType = 0
	InvalidTransactionRecord_SIGFAILED    InvalidTransactionRecord_ErrType = 1
)

var InvalidTransactionRecord_ErrType_name = map[int32]string{
	0: "OUTOFBALANCE",
	1: "SIGFAILED",
}
var InvalidTransactionRecord_ErrType_value = map[string]int32{
	"OUTOFBALANCE": 0,
	"SIGFAILED":    1,
}

func (x InvalidTransactionRecord_ErrType) String() string {
	return proto.EnumName(InvalidTransactionRecord_ErrType_name, int32(x))
}
func (InvalidTransactionRecord_ErrType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type Transaction struct {
	From            []byte `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To              []byte `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value           []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp       int64  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Signature       []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	Id              uint64 `protobuf:"varint,6,opt,name=id" json:"id,omitempty"`
	TransactionHash []byte `protobuf:"bytes,7,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InvalidTransactionRecord struct {
	Tx      *Transaction                     `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
	ErrType InvalidTransactionRecord_ErrType `protobuf:"varint,2,opt,name=errType,enum=types.InvalidTransactionRecord_ErrType" json:"errType,omitempty"`
}

func (m *InvalidTransactionRecord) Reset()                    { *m = InvalidTransactionRecord{} }
func (m *InvalidTransactionRecord) String() string            { return proto.CompactTextString(m) }
func (*InvalidTransactionRecord) ProtoMessage()               {}
func (*InvalidTransactionRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InvalidTransactionRecord) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type InvalidTransactionRecords struct {
	Records []*InvalidTransactionRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *InvalidTransactionRecords) Reset()                    { *m = InvalidTransactionRecords{} }
func (m *InvalidTransactionRecords) String() string            { return proto.CompactTextString(m) }
func (*InvalidTransactionRecords) ProtoMessage()               {}
func (*InvalidTransactionRecords) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *InvalidTransactionRecords) GetRecords() []*InvalidTransactionRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*Transaction)(nil), "types.Transaction")
	proto.RegisterType((*InvalidTransactionRecord)(nil), "types.InvalidTransactionRecord")
	proto.RegisterType((*InvalidTransactionRecords)(nil), "types.InvalidTransactionRecords")
	proto.RegisterEnum("types.InvalidTransactionRecord_ErrType", InvalidTransactionRecord_ErrType_name, InvalidTransactionRecord_ErrType_value)
}

func init() { proto.RegisterFile("transaction.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0xff, 0xb4, 0x4d, 0x43, 0x6f, 0xfb, 0xd7, 0x78, 0x71, 0x31, 0x82, 0xa0, 0x64, 0x63,
	0x71, 0x91, 0x45, 0x5d, 0xb9, 0x8c, 0x9a, 0x6a, 0xa0, 0x58, 0x18, 0xa3, 0xfb, 0xb1, 0x19, 0x35,
	0x60, 0x32, 0x61, 0x66, 0x2a, 0xfa, 0x50, 0x3e, 0x82, 0xef, 0xe6, 0x74, 0xd2, 0x92, 0x20, 0x14,
	0x77, 0x37, 0xdf, 0x39, 0xf7, 0xe6, 0x1c, 0x06, 0xf6, 0xb5, 0x64, 0xa5, 0x62, 0x4b, 0x9d, 0x8b,
	0x32, 0xac, 0xa4, 0xd0, 0x02, 0x5d, 0xfd, 0x59, 0x71, 0x15, 0x7c, 0x3b, 0x30, 0x4c, 0x1b, 0x11,
	0x11, 0x7a, 0xcf, 0x52, 0x14, 0xc4, 0x39, 0x71, 0x26, 0x23, 0x6a, 0x67, 0x1c, 0x43, 0x47, 0x0b,
	0xd2, 0xb1, 0xc4, 0x4c, 0x78, 0x00, 0xee, 0x3b, 0x7b, 0x5b, 0x71, 0xd2, 0xb5, 0xa8, 0xfe, 0xc0,
	0x23, 0x18, 0xe8, 0xbc, 0xe0, 0x4a, 0xb3, 0xa2, 0x22, 0x3d, 0xa3, 0x74, 0x69, 0x03, 0xd6, 0xaa,
	0xca, 0x5f, 0x4a, 0xa6, 0x57, 0x92, 0x13, 0xd7, 0xee, 0x35, 0x60, 0xfd, 0x87, 0x3c, 0x23, 0x7d,
	0x83, 0x7b, 0xd4, 0x4c, 0x38, 0x81, 0xbd, 0x56, 0xe2, 0x5b, 0xa6, 0x5e, 0x89, 0x67, 0x77, 0x7e,
	0xe3, 0xe0, 0xcb, 0x01, 0x92, 0x94, 0x26, 0x41, 0x9e, 0xb5, 0x6a, 0x50, 0xbe, 0x14, 0x32, 0xc3,
	0xc0, 0x04, 0xff, 0xb0, 0x55, 0x86, 0x53, 0x0c, 0x6d, 0xe1, 0xb0, 0xed, 0x32, 0x2a, 0x46, 0xe0,
	0x71, 0x29, 0x53, 0xa3, 0xd9, 0x86, 0xe3, 0xe9, 0xe9, 0xc6, 0xb8, 0xeb, 0x6a, 0x18, 0xd7, 0x76,
	0xba, 0xdd, 0x0b, 0xce, 0xc0, 0xdb, 0x30, 0xf4, 0x61, 0xb4, 0x78, 0x48, 0x17, 0xb3, 0xcb, 0x68,
	0x1e, 0xdd, 0x5d, 0xc5, 0xfe, 0x3f, 0xfc, 0x0f, 0x83, 0xfb, 0xe4, 0x66, 0x16, 0x25, 0xf3, 0xf8,
	0xda, 0x77, 0x82, 0x47, 0x38, 0xdc, 0x75, 0x58, 0xe1, 0x05, 0x78, 0xb2, 0x1e, 0x4d, 0xe8, 0xae,
	0x09, 0x7d, 0xfc, 0x47, 0x16, 0xba, 0xf5, 0x3f, 0xf5, 0xed, 0xab, 0x9e, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x5e, 0xdd, 0x18, 0x97, 0xea, 0x01, 0x00, 0x00,
}
