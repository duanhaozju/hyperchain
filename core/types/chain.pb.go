// Code generated by protoc-gen-go.
// source: chain.proto
// DO NOT EDIT!

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Chain struct {
	Version         []byte `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	LatestBlockHash []byte `protobuf:"bytes,2,opt,name=latestBlockHash,proto3" json:"latestBlockHash,omitempty"`
	ParentBlockHash []byte `protobuf:"bytes,3,opt,name=parentBlockHash,proto3" json:"parentBlockHash,omitempty"`
	Height          uint64 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Genesis         uint64 `protobuf:"varint,5,opt,name=genesis" json:"genesis,omitempty"`
	CurrentTxSum    uint64 `protobuf:"varint,6,opt,name=currentTxSum" json:"currentTxSum,omitempty"`
	Extra           []byte `protobuf:"bytes,7,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (m *Chain) Reset()                    { *m = Chain{} }
func (m *Chain) String() string            { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()               {}
func (*Chain) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Chain) GetVersion() []byte {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Chain) GetLatestBlockHash() []byte {
	if m != nil {
		return m.LatestBlockHash
	}
	return nil
}

func (m *Chain) GetParentBlockHash() []byte {
	if m != nil {
		return m.ParentBlockHash
	}
	return nil
}

func (m *Chain) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Chain) GetGenesis() uint64 {
	if m != nil {
		return m.Genesis
	}
	return 0
}

func (m *Chain) GetCurrentTxSum() uint64 {
	if m != nil {
		return m.CurrentTxSum
	}
	return 0
}

func (m *Chain) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

func init() {
	proto.RegisterType((*Chain)(nil), "types.Chain")
}

func init() { proto.RegisterFile("chain.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x8f, 0x4d, 0xaa, 0xc2, 0x30,
	0x14, 0x46, 0xc9, 0x7b, 0x4d, 0x0b, 0xb1, 0x20, 0x04, 0x91, 0x3b, 0x2c, 0x1d, 0x75, 0xe4, 0xc4,
	0x1d, 0xe8, 0xc4, 0x71, 0x75, 0x03, 0xb1, 0x5c, 0x9a, 0x60, 0x4d, 0x4a, 0x92, 0x4a, 0x5d, 0xae,
	0x3b, 0x91, 0xa4, 0x16, 0xb4, 0xc3, 0x73, 0xbe, 0x43, 0x7e, 0xd8, 0xaa, 0x91, 0x42, 0xe9, 0x5d,
	0x6f, 0x8d, 0x37, 0x9c, 0xfa, 0x67, 0x8f, 0xae, 0x7c, 0x11, 0x46, 0x8f, 0x41, 0x73, 0x60, 0xd9,
	0x03, 0xad, 0x53, 0x46, 0x03, 0x29, 0x48, 0x95, 0xd7, 0x33, 0xf2, 0x8a, 0xad, 0x3b, 0xe1, 0xd1,
	0xf9, 0x43, 0x67, 0x9a, 0xdb, 0x49, 0x38, 0x09, 0x7f, 0xb1, 0x58, 0xea, 0x50, 0xf6, 0xc2, 0xa2,
	0xfe, 0x2a, 0xff, 0xa7, 0x72, 0xa1, 0xf9, 0x96, 0xa5, 0x12, 0x55, 0x2b, 0x3d, 0x24, 0x05, 0xa9,
	0x92, 0xfa, 0x43, 0xe1, 0x15, 0x2d, 0x6a, 0x74, 0xca, 0x01, 0x8d, 0xc3, 0x8c, 0xbc, 0x64, 0x79,
	0x33, 0xd8, 0x70, 0xca, 0x65, 0x3c, 0x0f, 0x77, 0x48, 0xe3, 0xfc, 0xe3, 0xf8, 0x86, 0x51, 0x1c,
	0xbd, 0x15, 0x90, 0xc5, 0x5b, 0x27, 0xb8, 0xa6, 0xf1, 0xc7, 0xfb, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x77, 0xda, 0x3b, 0x5d, 0x00, 0x01, 0x00, 0x00,
}
