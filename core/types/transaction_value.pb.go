// Code generated by protoc-gen-go.
// source: transaction_value.proto
// DO NOT EDIT!

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TransactionValue struct {
	Price              int64  `protobuf:"varint,1,opt,name=price" json:"price,omitempty"`
	GasLimit           int64  `protobuf:"varint,2,opt,name=gasLimit" json:"gasLimit,omitempty"`
	Amount             int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Payload            []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	EncryptedAmount    []byte `protobuf:"bytes,5,opt,name=encryptedAmount,proto3" json:"encryptedAmount,omitempty"`
	HomomorphicAmount  []byte `protobuf:"bytes,6,opt,name=homomorphicAmount,proto3" json:"homomorphicAmount,omitempty"`
	HomomorphicBalance []byte `protobuf:"bytes,7,opt,name=homomorphicBalance,proto3" json:"homomorphicBalance,omitempty"`
	Update             bool   `protobuf:"varint,8,opt,name=update" json:"update,omitempty"`
	Freeze             bool   `protobuf:"varint,9,opt,name=freeze" json:"freeze,omitempty"`
}

func (m *TransactionValue) Reset()                    { *m = TransactionValue{} }
func (m *TransactionValue) String() string            { return proto.CompactTextString(m) }
func (*TransactionValue) ProtoMessage()               {}
func (*TransactionValue) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *TransactionValue) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TransactionValue) GetGasLimit() int64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *TransactionValue) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransactionValue) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TransactionValue) GetEncryptedAmount() []byte {
	if m != nil {
		return m.EncryptedAmount
	}
	return nil
}

func (m *TransactionValue) GetHomomorphicAmount() []byte {
	if m != nil {
		return m.HomomorphicAmount
	}
	return nil
}

func (m *TransactionValue) GetHomomorphicBalance() []byte {
	if m != nil {
		return m.HomomorphicBalance
	}
	return nil
}

func (m *TransactionValue) GetUpdate() bool {
	if m != nil {
		return m.Update
	}
	return false
}

func (m *TransactionValue) GetFreeze() bool {
	if m != nil {
		return m.Freeze
	}
	return false
}

func init() {
	proto.RegisterType((*TransactionValue)(nil), "types.TransactionValue")
}

func init() { proto.RegisterFile("transaction_value.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0x87, 0xe9, 0xae, 0xed, 0xd6, 0x41, 0x50, 0x07, 0xd1, 0xe0, 0xa9, 0x78, 0xea, 0x41, 0xf6,
	0xe2, 0x13, 0xe8, 0xd9, 0x53, 0x11, 0xaf, 0x32, 0xa6, 0xa3, 0x1b, 0x68, 0x93, 0x90, 0x4e, 0x85,
	0xfa, 0x50, 0x3e, 0xa3, 0x34, 0xa9, 0x7f, 0xd0, 0x3d, 0x7e, 0xbf, 0xef, 0x0b, 0x84, 0x81, 0x0b,
	0x09, 0x64, 0x07, 0xd2, 0x62, 0x9c, 0x7d, 0x7a, 0xa3, 0x6e, 0xe4, 0xad, 0x0f, 0x4e, 0x1c, 0xe6,
	0x32, 0x79, 0x1e, 0xae, 0x3e, 0x56, 0x70, 0xf2, 0xf0, 0x93, 0x3c, 0xce, 0x05, 0x9e, 0x41, 0xee,
	0x83, 0xd1, 0xac, 0xb2, 0x2a, 0xab, 0xd7, 0x4d, 0x02, 0xbc, 0x84, 0xf2, 0x95, 0x86, 0x7b, 0xd3,
	0x1b, 0x51, 0xab, 0x28, 0xbe, 0x19, 0xcf, 0xa1, 0xa0, 0xde, 0x8d, 0x56, 0xd4, 0x3a, 0x9a, 0x85,
	0x50, 0xc1, 0xc6, 0xd3, 0xd4, 0x39, 0x6a, 0xd5, 0x41, 0x95, 0xd5, 0x47, 0xcd, 0x17, 0x62, 0x0d,
	0xc7, 0x6c, 0x75, 0x98, 0xbc, 0x70, 0x7b, 0x9b, 0x9e, 0xe6, 0xb1, 0xf8, 0x3b, 0xe3, 0x35, 0x9c,
	0xee, 0x5c, 0xef, 0x7a, 0x17, 0xfc, 0xce, 0xe8, 0xa5, 0x2d, 0x62, 0xfb, 0x5f, 0xe0, 0x16, 0xf0,
	0xd7, 0x78, 0x47, 0x1d, 0x59, 0xcd, 0x6a, 0x13, 0xf3, 0x3d, 0x66, 0xfe, 0xf9, 0xe8, 0x5b, 0x12,
	0x56, 0x65, 0x95, 0xd5, 0x65, 0xb3, 0xd0, 0xbc, 0xbf, 0x04, 0xe6, 0x77, 0x56, 0x87, 0x69, 0x4f,
	0xf4, 0x5c, 0xc4, 0xf3, 0xdd, 0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0x38, 0x03, 0x47, 0xa2, 0x59,
	0x01, 0x00, 0x00,
}
