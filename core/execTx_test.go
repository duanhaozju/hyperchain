/**
 * Created by Meiling Hu on 11/16/16.
 */
package core

import (
	"testing"
	"strconv"
	"hyperchain/core/vm/params"
	"time"
	"github.com/golang/protobuf/proto"
	"hyperchain/core/types"
	"hyperchain/common"
	"hyperchain/core/state"
	"hyperchain/hyperdb"
	"fmt"
)

//statedb, err := state.New(pool.lastValidationState, db)

var(
	from = common.HexToAddress("000f1a7a08ccc48e5d30f80850cf1cf283aa3abd")
	toCreate = common.Address{}
	toInvoke = common.HexToAddress("000f1a7a08ccc48e5d30f80850cf1cf283aa3aaa")
	toInvokeZS = common.HexToAddress("0x3379474040a904478dcaec148398a0ebbc44a186")
	InvalidPayload="0x12223314343432432423"
	CreatePayload="0x606060405260008054600160a060020a03191633179055610132806100246000396000f3606060405260e060020a60003504635e5c06e2811461003c578063700da41614610054578063867904b4146100ba57806393423e9c14610100575b005b61011c60043560016020526000908152604090205481565b610126600435602435604435600160a060020a03831660009081526001602052604081205463ffffffff831690106100b3576040808220805463ffffffff851690819003909155600160a060020a038516835291208054909101905560015b9392505050565b6101266004356024356000805433600160a060020a03908116911614156100fa57600160a060020a03831681526001602081905260409091208054830190555b92915050565b600160a060020a03600435166000908152600160205260409020545b6060908152602090f35b15156060908152602090f3"
	CreatePayloadZS = "0x60606040819052603c600a556000600b55610168600c556101608061059983396101c0604052905160805160a05160c05160e051610100805161012051610140519851610180516101a05160019a909a556000805460ff191690991761ff00191694909702939093178755600a94909455600b92909255600c9190915560079190915560069490945560048054600160a060020a03199081169095179055600580549094161760a060020a61ffff02191674010000000000000000000000000000000000000000909202919091179091556104ba9081906100df90396000f3606060405236156101065760e060020a6000350463079f93fb811461010b578063090bac6e146101235780632d0a683e146101715780632e54149f1461018d5780633266a3e01461019d5780633d6a7ef0146101ab5780634ab4345a146101c657806356de96db146101dc57806368beae63146101f95780636ea46b7b146102175780636f3ed9d71461022b57806390f2d5c81461023b57806394c459011461024b578063b780f33814610296578063bf4bf01a146102ac578063ce94c98b146102bc578063d2ff48e2146102ca578063e3c98aa714610313578063ed4908a914610323578063f00d4b5d146103cb578063f808252a146103f8578063f8d718a014610406575b610002565b346100025761042a600554600160a060020a03165b90565b346100025761042a6004356000600d600050828154811015610002575090527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50154600160a060020a031690565b34610002576101a96000805461080061ff00199091161790555b565b3461000257610447600d54610120565b3461000257600435600b555b005b34610002576101a96004356006548190101561045957610002565b34610002576004356002556024356003556101a9565b34610002576000805461ff001916610100600435021790556101a9565b346100025760058054600160a060020a0319166004351790556101a9565b3461000257600680546004350190556101a9565b3461000257610447600654610120565b3461000257600435600a556101a9565b34610002576101a9600435600d80546001810180835582818380158290116104655781836000526020600020918201910161046591905b808211156104875760008155600101610282565b3461000257610447600054610100900460ff1681565b34610002576004356008556101a9565b346100025761044760035481565b34610002576101a9600a54600090111561048b57600a805460001901908190556000901161048b57600054610100900460ff166001141561048b57600554600160a060020a0316ff5b3461000257600435600c556101a9565b3461000257600454600554600154600054600654600754600954600a54600b54600c5460408051600160a060020a039b8c1681529a8a1660208c01528a81019890985260ff90961660608a01527401000000000000000000000000000000000000000090970461ffff16608089015260a088019390935260c087019190915260e086015261010085015261012084019290925261014083019190915251908190036101600190f35b346100025760048054600160a060020a0319908116823517909155600580549091166024351790556101a9565b346100025761044760025481565b34610002576002546003546040805192835260208301919091528051918290030190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b60068054829003905550565b5050506000928352506020909120018054600160a060020a0319169091179055565b5090565b600b5460009011156104a257600b80546000190190555b600c54600090111561018b57600c805460001901905556"
	InvokePayloadZS = ""
	Gas int64 = 10000
	GasPrice int64 = 10000
)

func TestInvokeContract(t *testing.T) {
	var env = make(map[string]string)
	db, _ := hyperdb.NewMemDatabase()
	statedb, _ := state.New(common.Hash{},db)

	env["currentNumber"] = strconv.FormatUint(uint64(1), 10)
	env["currentGasLimit"] = "10000000"
	vmenv := NewEnvFromMap(RuleSet{params.MainNetHomesteadBlock, params.MainNetDAOForkBlock, true}, statedb, env)

	var tx *types.Transaction
	timestamp := time.Now().UnixNano()
	payload := common.FromHex(InvalidPayload)
	txValue := types.NewTransactionValue(GasPrice,Gas,0,payload)
	value, err := proto.Marshal(txValue)
	if err != nil {
		t.Fatal(err)
	}

	// 调用合约或者普通交易(普通交易还需要加检查余额)
	tx = types.NewTransaction(from[:],toInvoke[:], value, timestamp)

	ExecTransaction(*tx,vmenv)

}

func TestCreateContract(t *testing.T) {
	var env = make(map[string]string)
	db, _ := hyperdb.NewMemDatabase()
	statedb, _ := state.New(common.Hash{},db)

	env["currentNumber"] = strconv.FormatUint(uint64(1), 10)
	env["currentGasLimit"] = "10000000"
	vmenv := NewEnvFromMap(RuleSet{params.MainNetHomesteadBlock, params.MainNetDAOForkBlock, true}, statedb, env)

	var tx *types.Transaction
	timestamp := time.Now().UnixNano()
	//invalidPayload := common.FromHex(InvalidPayload)
	//txValue := types.NewTransactionValue(GasPrice,Gas,0,invalidPayload)
	//value, err := proto.Marshal(txValue)
	//if err != nil {
	//	t.Fatal(err)
	//}
	//// 部署合约 invalid payload
	////tx = types.NewTransaction(realArgs.From[:], nil, value, []byte(args.Signature))
	//tx = types.NewTransaction(from[:], nil, value, timestamp)
	//ExecTransaction(*tx,vmenv)

	createPayload := common.FromHex(CreatePayload)
	txValue := types.NewTransactionValue(GasPrice,Gas,0,createPayload)
	value, err := proto.Marshal(txValue)
	if err != nil {
		t.Fatal(err)
	}
	// 部署合约 合法bin
	tx = types.NewTransaction(from[:], nil, value, timestamp)
	_,_,addrContract,_ := ExecTransaction(*tx,vmenv)
	fmt.Println(common.ToHex(addrContract[:]))

	//createPayload = common.FromHex(CreatePayloadZS)
	//txValue = types.NewTransactionValue(GasPrice,Gas,0,createPayload)
	//value, err = proto.Marshal(txValue)
	//if err != nil {
	//	t.Fatal(err)
	//}
	//tx = types.NewTransaction(from[:],nil,value,timestamp)
	//_,_,addrContract,_ = ExecTransaction(*tx,vmenv)
	//fmt.Println(common.ToHex(addrContract[:]))
}

func TestCallCode(t *testing.T) {
	var env = make(map[string]string)
	db, _ := hyperdb.NewMemDatabase()
	statedb, _ := state.New(common.Hash{},db)

	env["currentNumber"] = strconv.FormatUint(uint64(1), 10)
	env["currentGasLimit"] = "10000000"
	vmenv := NewEnvFromMap(RuleSet{params.MainNetHomesteadBlock, params.MainNetDAOForkBlock, true}, statedb, env)

	var tx *types.Transaction
	timestamp := time.Now().UnixNano()
	//haizhen nonghang create contract bin
	bincode := ""
	createPayload := common.FromHex(bincode)
	txValue := types.NewTransactionValue(GasPrice,Gas,0,createPayload)
	value, err := proto.Marshal(txValue)
	if err != nil {
		t.Fatal(err)
	}
	tx = types.NewTransaction(from[:], nil, value, timestamp)
	_,retdeploy,addrContract,_ := ExecTransaction(*tx,vmenv)//0xbbe2b6412ccf633222374de8958f2acc76cda9c9
	fmt.Println("contract address from deploy",common.ToHex(addrContract[:]))
	fmt.Println("ret of deploy contract:",common.ToHex(retdeploy))

	fmt.Println("------------invoke the contract issue method--------------------")
	//invoke
	payload := common.FromHex("0x32c1680c100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000")
	txValue = types.NewTransactionValue(GasPrice,Gas,0,payload)
	value,_ = proto.Marshal(txValue)
	tx = types.NewTransaction(from[:],addrContract[:],value,timestamp)
	_,ret,_,_ := ExecTransaction(*tx,vmenv)
	fmt.Println(ret)
}
func TestCalBlockGPS(t *testing.T) {
	//code := ""
	ret_deploy :="0x606060405260918060106000396000f3606060405260e060020a6000350463eb8ac9218114601c575b6002565b34600257607f60243560043581028101819003906000818381156002570492508183811560025760029190060a82018290038202925081838115600257049250818381156002576004600081905591900683178316831890921890910192915050565b60408051918252519081900360200190f3"

	code_invoke := "0x606060405260918060106000396000f3606060405260e060020a6000350463eb8ac9218114601c575b6002565b34600257607f60243560043581028101819003906000818381156002570492508183811560025760029190060a82018290038202925081838115600257049250818381156002576004600081905591900683178316831890921890910192915050565b60408051918252519081900360200190f3"
	if ret_deploy == code_invoke{
		fmt.Println("code is ret of deploy")
	}
}
func TestExec(t *testing.T) {
	var env = make(map[string]string)
	db, _ := hyperdb.NewMemDatabase()
	statedb, _ := state.New(common.Hash{},db)

	env["currentNumber"] = strconv.FormatUint(uint64(1), 10)
	env["currentGasLimit"] = "10000000"
	vmenv := NewEnvFromMap(RuleSet{params.MainNetHomesteadBlock, params.MainNetDAOForkBlock, true}, statedb, env)

	var tx *types.Transaction
	timestamp := time.Now().UnixNano()
	//xieyijun multi operation contract bin
	bincode := "0x606060405260918060106000396000f3606060405260e060020a6000350463eb8ac9218114601c575b6002565b34600257607f60243560043581028101819003906000818381156002570492508183811560025760029190060a82018290038202925081838115600257049250818381156002576004600081905591900683178316831890921890910192915050565b60408051918252519081900360200190f3"
	createPayload:= common.FromHex(bincode)
	txValue := types.NewTransactionValue(GasPrice,Gas,0,createPayload)
	value, err := proto.Marshal(txValue)
	if err != nil {
		t.Fatal(err)
	}
	tx = types.NewTransaction(from[:], nil, value, timestamp)
	_,retdeploy,addrContract,_ := ExecTransaction(*tx,vmenv)//0xbbe2b6412ccf633222374de8958f2acc76cda9c9
	fmt.Println("contract address from deploy",common.ToHex(addrContract[:]))
	fmt.Println("ret of deploy contract:",common.ToHex(retdeploy))

	fmt.Println("------------invoke the contract issue method--------------------")
	//invoke
	payload := common.FromHex("0xeb8ac92100000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006")
	txValue = types.NewTransactionValue(GasPrice,Gas,0,payload)
	value,_ = proto.Marshal(txValue)
	tx = types.NewTransaction(from[:],addrContract[:],value,timestamp)
	_,ret,_,_ := ExecTransaction(*tx,vmenv)
	fmt.Println(ret)

}