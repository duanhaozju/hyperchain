syntax = "proto3";

option java_multiple_files = true;
option java_package = "cn.hyperchain.protos";
option java_outer_classname = "ContractProto";

service Contract {
    //used tp execute contract method remotely
    rpc Execute (Request) returns (Response) {}
    //used to detect the health state of contract
    rpc HeartBeat(Request) returns (Response) {}
    //used to transfer data between hyperchain and contract
}

service Ledger {
    rpc Get(Key) returns (Value) {}
    rpc Put(KeyValue) returns(Response) {}
}

message Key {
    string namespace = 1;
    string id = 2;
    bytes k = 3;
}

message Value{
    string id = 1;
    bytes v   =2;
}

message KeyValue {
    string namespace = 1;
    string id = 2;
    bytes k = 3;
    bytes v = 4;
}

message Request {
    string txid   = 1;
    string method = 2;
    string namespace = 3;
    string cid = 4;
    repeated bytes args = 5;
}

message Response {
    string id    = 1;
    bool  ok     = 2;
    bytes result = 3;
}
